version: '3.9'

volumes:
  app_logs:
  tempo-data:

services:
  app:
    build: ./app
    ports:
      - "8080:8080"
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://tempo:4317
      - SERVICE_NAME=service-1
      - PORT=8080
      - LOG_FILE=app.log
    volumes:
      - app_logs:/var/log
    depends_on:
      - tempo
      - loki
      - prometheus
    networks:
      - observability

  app-2:
    build: ./app-2
    ports:
      - "8081:8081"
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://tempo:4317
      - SERVICE_NAME=service-2
      - PORT=8081
      - LOG_FILE=app2.log
    volumes:
      - app_logs:/var/log
    depends_on:
      - tempo
      - loki
      - prometheus
    networks:
      - observability

  consumer-1:
    build: ./consumer-1
    environment:
      - SERVICE_NAME=consumer-1
      - LOG_FILE=consumer-1.log
    depends_on:
      - rabbitmq
      - tempo
    networks:
      - observability
    deploy:
      replicas: 2

  consumer-2:
    build: ./consumer-2
    environment:
      - SERVICE_NAME=consumer-2
      - LOG_FILE=consumer-2.log
    depends_on:
      - rabbitmq
      - tempo
    networks:
      - observability
    deploy:
      replicas: 2

  rabbitmq:
    image: rabbitmq:3.12-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    networks:
      - observability

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--web.enable-remote-write-receiver"
    ports:
      - "9090:9090"
    networks:
      - observability

  tempo:
    image: grafana/tempo:latest
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./tempo.yaml:/etc/tempo.yaml:ro
      - tempo-data:/var/tempo
    user: "0:0"
    ports:
      - "3200:3200"
      - "4317:4317"
    networks:
      - observability

  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    # kalau nggak punya custom config, cukup gini:
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - observability

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    # hapus kalau folder provisioning belum ada
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - app
      - app-2
      - prometheus
      - tempo
      - loki
    networks:
      - observability

  promtail:
    image: grafana/promtail:latest
    volumes:
      - ./promtail-config.yaml:/etc/promtail/config.yaml
      - app_logs:/var/log
    command: -config.file=/etc/promtail/config.yaml
    depends_on:
      - app
      - app-2
      - prometheus
      - tempo
      - loki
    networks:
      - observability

networks:
  observability:
    driver: bridge
